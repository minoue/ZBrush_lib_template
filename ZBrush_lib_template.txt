
[VarDef, dllPath, ""]  // path to dll
[VarDef, err, 0]  // standard error
[VarDef, ver, 0]  // version
[VarDef, stringArg, ""]
[VarDef, responseString, ""]

[RoutineDef, CheckSystem,
    [VarSet, dllPath, "ZBrush_lib_template.lib"]
	[If,[FileExists, dllPath],
		,
		[Note,"Lib is missing"][Exit]
	]
]

[IButton, "Test Version", "Test Lib Version function",
	// [IConfig, 4.8]
	[RoutineCall, CheckSystem]
	[VarSet, ver, [FileExecute, [Var, dllPath], "Version"]]
	[Note, [StrMerge, "This Lib is version ", ver]]
]

[IButton, "Test HelloDLL", "Test DLL HelloDLL function",
	// [IConfig, 4.8]
	[RoutineCall, CheckSystem]
	[VarSet, stringArg, "Hello from ZBrush"]

	//create buffer for response string
	//this buffer can also pass a string to the dll (such as a second file path)
	[MemCreate, Test_Lib_mem, 256, 0]

	[VarSet, err, [FileExecute, [Var, dllPath], "HelloLib", #stringArg, , Test_Lib_mem]]

    // HelloLib function in cpp code return 1 or 0, which 1 is error and 0 is okay
	[If, err,
		[Note, "An error has occured"]
		,
		[MemReadString, Test_Lib_mem, #responseString]
		[Note, responseString]  // should say 'Hello from my DLL'
	]
    [MemDelete, Test_Lib_mem]  // done with buffer, delete it
]

[IButton, "Save MemString to txt file", "random desc",
	[RoutineCall, CheckSystem]

    [VarSet, fileCount, 5]
    [VarDef, myArray(fileCount)]
    [VarSet, test1, "/Users/Shared/Pixologic/GoZApps/Maya/GoZBrush.xpm:"]
    [VarSet, test2, "/Users/Shared/Pixologic/GoZBrush/GoZLocateApp.app/Contents/Info.plist:"]
    [VarSet, test3, "/Users/Shared/Pixologic/GoZProjects/Default:"]
    [VarSet, test4, "/Applications/ZBrush 2021/:"]
    [VarSet, test5, "/Applications/ZBrushOSX 2019.1/:"]

    [VarSet, myArray(0), test1]
    [VarSet, myArray(1), test2]
    [VarSet, myArray(2), test3]
    [VarSet, myArray(3), test4]
    [VarSet, myArray(4), test5]

	[MemCreate, memString, 1024, 0]

    [VarSet, offset, 0]

    [VarSet, index, 0]
    [Loop, fileCount,
        [MemWriteString, memString, myArray(index), offset]
        [VarSet, offset, offset + [StrLength, myArray(index)]]
        [VarInc, index]
    ]

	[VarSet, err, [FileExecute, [Var, dllPath], "SaveMemStringToFile", #stringArg, offset, memString]]
    [If, err,
		[Note, "An error has occured"]
		,
        [Note, "FIle paths are saved to txt files"]
    ]
    [MemDelete, memString]  // done with buffer, delete it
]
